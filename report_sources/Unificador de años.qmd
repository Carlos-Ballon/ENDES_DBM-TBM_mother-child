---
title: "ENDES_TBM_2019"
author: "Carlos Ballon-Salcedo"
format: html
editor: visual
execute:
  echo: false
  warning: false
  message: false
  error: false
  include: true
  results: hide
  cache: false
  fig_caption: true
  fig_width: 6
  fig_height: 4
  out.width: "100%"
  out.extra: |
    class="img-responsive"
    style="display:block; margin-left:auto; margin-right:auto;"
---

# Load packages

```{r}
pacman::p_load(
  rio,
  here,
  tidyverse,
  survey,
  gtsummary,
  finalfit,
  flextable,
  bstfun,
  haven, 
  janitor,
  epiDisplay,
  Hmisc,
  labelled,
  naniar,
  rfextras,
  sjlabelled)

#source(here::here("scripts", "dictionary.R"))
rfextras::load_scripts()
```

# Import data

## 2024

```{r}
individual_data_2024 <- rio::import(here::here("data", "2024","RECH1_2024.dta"))

home_data_2024 <- rio::import(here::here("data", "2024", "RECH0_2024.dta"))

dwelling_data_2024 <- rio::import(here::here("data", "2024", "RECH23_2024.dta"))
```

```{r}
woman_data_1_2024 <- rio::import(here::here("data", "2024", "RECH5_2024.dta"))

woman_data_2_2024 <- rio::import(here::here("data", "2024", "REC0111_2024.dta"))

woman_data_3_2024 <- rio::import(here::here("data", "2024", "REC41_2024.dta"))

woman_data_4_2024 <- rio::import(here::here("data", "2024", "REC42_2024.dta"))

woman_data_5_2024 <- rio::import(here::here("data", "2024", "RE223132_2024.dta"))
```

```{r}
children_data_1_2024 <- rio::import(here::here("data", "2024", "RECH6_2024.dta"))

children_data_2_2024 <- rio::import(here::here("data", "2024", "REC44_2024.dta"))

children_data_3_2024 <- rio::import(here::here("data", "2024", "REC43_2024.dta"))
```

```{r}
health_data_2024 <- rio::import(here::here("data", "2024", "CSALUD01_2024.dta"))
```

## 2023

```{r}
individual_data_2023 <- rio::import(here::here("data", "2023", "RECH1_2023.dta"))

home_data_2023 <- rio::import(here::here("data", "2023", "RECH0_2023.dta"))

dwelling_data_2023 <- rio::import(here::here("data", "2023", "RECH23_2023.dta"))
```

```{r}
woman_data_1_2023 <- rio::import(here::here("data", "2023", "RECH5_2023.dta"))

woman_data_2_2023 <- rio::import(here::here("data", "2023", "REC0111_2023.dta"))

woman_data_3_2023 <- rio::import(here::here("data", "2023", "REC41_2023.dta"))

woman_data_4_2023 <- rio::import(here::here("data", "2023", "REC42_2023.dta"))

woman_data_5_2023 <- rio::import(here::here("data", "2023", "RE223132_2023.dta"))
```

```{r}
children_data_1_2023 <- rio::import(here::here("data", "2023", "RECH6_2023.dta"))

children_data_2_2023 <- rio::import(here::here("data", "2023", "REC44_2023.dta"))

children_data_3_2023 <- rio::import(here::here("data", "2023", "REC43_2023.dta"))
```

```{r}
health_data_2023 <- rio::import(here::here("data", "2023", "CSALUD01_2023.dta"))
```

## 2022

```{r}
individual_data_2022 <- rio::import(here::here("data", "2022","RECH1_2022.dta"))

home_data_2022 <- rio::import(here::here("data", "2022", "RECH0_2022.dta"))

dwelling_data_2022 <- rio::import(here::here("data", "2022", "RECH23_2022.dta"))
```

```{r}
woman_data_1_2022 <- rio::import(here::here("data", "2022", "RECH5_2022.dta"))

woman_data_2_2022 <- rio::import(here::here("data", "2022", "REC0111_2022.dta"))

woman_data_3_2022 <- rio::import(here::here("data", "2022", "REC41_2022.dta"))

woman_data_4_2022 <- rio::import(here::here("data", "2022", "REC42_2022.dta"))

woman_data_5_2022 <- rio::import(here::here("data", "2022", "RE223132_2022.dta"))
```

```{r}
children_data_1_2022 <- rio::import(here::here("data", "2022", "RECH6_2022.dta"))

children_data_2_2022 <- rio::import(here::here("data", "2022", "REC44_2022.dta"))

children_data_3_2022 <- rio::import(here::here("data", "2022", "REC43_2022.dta"))
```

```{r}
health_data_2022 <- rio::import(here::here("data", "2022", "CSALUD01_2022.dta"))
```

## 2021

```{r}
individual_data_2021 <- rio::import(here::here("data", "2021","RECH1_2021.dta"))

home_data_2021 <- rio::import(here::here("data", "2021", "RECH0_2021.dta"))

dwelling_data_2021 <- rio::import(here::here("data", "2021", "RECH23_2021.dta"))
```

```{r}
woman_data_1_2021 <- rio::import(here::here("data", "2021", "RECH5_2021.dta"))

woman_data_2_2021 <- rio::import(here::here("data", "2021", "REC0111_2021.dta"))

woman_data_3_2021 <- rio::import(here::here("data", "2021", "REC41_2021.dta"))

woman_data_4_2021 <- rio::import(here::here("data", "2021", "REC42_2021.dta"))

woman_data_5_2021 <- rio::import(here::here("data", "2021", "RE223132_2021.dta"))
```

```{r}
children_data_1_2021 <- rio::import(here::here("data", "2021", "RECH6_2021.dta"))

children_data_2_2021 <- rio::import(here::here("data", "2021", "REC44_2021.dta"))

children_data_3_2021 <- rio::import(here::here("data", "2021", "REC43_2021.dta"))
```

```{r}
health_data_2021 <- rio::import(here::here("data", "2021", "CSALUD01_2021.dta"))
```

## 2020

```{r}
individual_data_2020 <- rio::import(here::here("data", "2020","RECH1_2020.sav"))

home_data_2020 <- rio::import(here::here("data", "2020", "RECH0_2020.sav"))

dwelling_data_2020 <- rio::import(here::here("data", "2020", "RECH23_2020.sav"))
```

```{r}
woman_data_1_2020 <- rio::import(here::here("data", "2020", "RECH5_2020.sav"))

woman_data_2_2020 <- rio::import(here::here("data", "2020", "REC0111_2020.sav"))

woman_data_3_2020 <- rio::import(here::here("data", "2020", "REC41_2020.sav"))

woman_data_4_2020 <- rio::import(here::here("data", "2020", "REC42_2020.sav"))

woman_data_5_2020 <- rio::import(here::here("data", "2020", "RE223132_2020.sav"))
```

```{r}
children_data_1_2020 <- rio::import(here::here("data", "2020", "RECH6_2020.sav"))

children_data_2_2020 <- rio::import(here::here("data", "2020", "REC44_2020.sav"))

children_data_3_2020 <- rio::import(here::here("data", "2020", "REC43_2020.sav"))
```

```{r}
health_data_2020 <- rio::import(here::here("data", "2020", "CSALUD01_2020.sav"))
```

# Process data

## Normalization of identifiers 2024

```{r}
# Individual data_2024
individual_data_2024 <- individual_data_2024 |> # Curado
  dplyr::mutate(QSNUMERO = HVIDX) # Número de orden en el hogar

# Woman data_2024
woman_data_1_2024 <- woman_data_1_2024 |> 
  dplyr::mutate(QSNUMERO = HA0) # Número de orden en el hogar

woman_data_2_2024 <- woman_data_2_2024 |>
  dplyr::mutate(
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)) # Número de orden en el hogar

woman_data_3_2024 <- woman_data_3_2024 |> # Esta une niños
  dplyr::mutate(
    HIDX = MIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_4_2024 <- woman_data_4_2024 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_5_2024 <- woman_data_5_2024 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)  # Número de orden en el hogar
  )

# Children data_2024
children_data_1_2024 <- children_data_1_2024 |> #
  dplyr::mutate(
    HW1 = HC1,
    HW2 = HC2,
    HW3 = HC3,
    HW53 = HC53,
    QSNUMERO = HC0 # Número de orden en el hogar
  )
 # dplyr::filter(HC13 == 0) # Filtramos a los niños medidos

children_data_2_2024 <- children_data_2_2024 |>
  dplyr::mutate(
    HIDX = HWIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
  #  dplyr::filter(HW13 == 0) # Filtramos a los niños medidos

children_data_3_2024 <- children_data_3_2024 |>
  dplyr::mutate(
    HIDX = HIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
```

## Normalization of identifiers 2023

```{r}
# Individual data_2023
individual_data_2023 <- individual_data_2023 |> # Curado
  dplyr::mutate(QSNUMERO = HVIDX) # Número de orden en el hogar

# Woman data_2023
woman_data_1_2023 <- woman_data_1_2023 |> 
  dplyr::mutate(QSNUMERO = HA0) # Número de orden en el hogar

woman_data_2_2023 <- woman_data_2_2023 |>
  dplyr::mutate(
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)) # Número de orden en el hogar

woman_data_3_2023 <- woman_data_3_2023 |> # Esta une niños
  dplyr::mutate(
    HIDX = MIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_4_2023 <- woman_data_4_2023 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_5_2023 <- woman_data_5_2023 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)  # Número de orden en el hogar
  )

# Children data_2023
children_data_1_2023 <- children_data_1_2023 |> #
  dplyr::mutate(
    HW1 = HC1,
    HW2 = HC2,
    HW3 = HC3,
    HW53 = HC53,
    QSNUMERO = HC0 # Número de orden en el hogar
  )
 # dplyr::filter(HC13 == 0) # Filtramos a los niños medidos

children_data_2_2023 <- children_data_2_2023 |>
  dplyr::mutate(
    HIDX = HWIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
  #  dplyr::filter(HW13 == 0) # Filtramos a los niños medidos

children_data_3_2023 <- children_data_3_2023 |>
  dplyr::mutate(
    HIDX = HIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
```

## Normalization of identifiers 2022

```{r}
# Individual data_2022
individual_data_2022 <- individual_data_2022 |> # Curado
  dplyr::mutate(QSNUMERO = HVIDX) # Número de orden en el hogar

# Woman data_2022
woman_data_1_2022 <- woman_data_1_2022 |> 
  dplyr::mutate(QSNUMERO = HA0) # Número de orden en el hogar

woman_data_2_2022 <- woman_data_2_2022 |>
  dplyr::mutate(
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)) # Número de orden en el hogar

woman_data_3_2022 <- woman_data_3_2022 |> # Esta une niños
  dplyr::mutate(
    HIDX = MIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_4_2022 <- woman_data_4_2022 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_5_2022 <- woman_data_5_2022 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)  # Número de orden en el hogar
  )

# Children data_2022
children_data_1_2022 <- children_data_1_2022 |> #
  dplyr::mutate(
    HW1 = HC1,
    HW2 = HC2,
    HW3 = HC3,
    HW53 = HC53,
    QSNUMERO = HC0 # Número de orden en el hogar
  )
 # dplyr::filter(HC13 == 0) # Filtramos a los niños medidos

children_data_2_2022 <- children_data_2_2022 |>
  dplyr::mutate(
    HIDX = HWIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
  #  dplyr::filter(HW13 == 0) # Filtramos a los niños medidos

children_data_3_2022 <- children_data_3_2022 |>
  dplyr::mutate(
    HIDX = HIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
```

## Normalization of identifiers 2021

```{r}
# Individual data_2021
individual_data_2021 <- individual_data_2021 |> # Curado
  dplyr::mutate(QSNUMERO = HVIDX) # Número de orden en el hogar

# Woman data_2021
woman_data_1_2021 <- woman_data_1_2021 |> 
  dplyr::mutate(QSNUMERO = HA0) # Número de orden en el hogar

woman_data_2_2021 <- woman_data_2_2021 |>
  dplyr::mutate(
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)) # Número de orden en el hogar

woman_data_3_2021 <- woman_data_3_2021 |> # Esta une niños
  dplyr::mutate(
    HIDX = MIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_4_2021 <- woman_data_4_2021 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_5_2021 <- woman_data_5_2021 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)  # Número de orden en el hogar
  )

# Children data_2021
children_data_1_2021 <- children_data_1_2021 |> #
  dplyr::mutate(
    HW1 = HC1,
    HW2 = HC2,
    HW3 = HC3,
    HW53 = HC53,
    QSNUMERO = HC0 # Número de orden en el hogar
  )
 # dplyr::filter(HC13 == 0) # Filtramos a los niños medidos

children_data_2_2021 <- children_data_2_2021 |>
  dplyr::mutate(
    HIDX = HWIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
  #  dplyr::filter(HW13 == 0) # Filtramos a los niños medidos

children_data_3_2021 <- children_data_3_2021 |>
  dplyr::mutate(
    HIDX = HIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
```

## Normalization of identifiers 2020

```{r}
# Individual data_2020
individual_data_2020 <- individual_data_2020 |> # Curado
  dplyr::mutate(QSNUMERO = HVIDX) # Número de orden en el hogar

# Woman data_2020
woman_data_1_2020 <- woman_data_1_2020 |> 
  dplyr::mutate(QSNUMERO = HA0) # Número de orden en el hogar

woman_data_2_2020 <- woman_data_2_2020 |>
  dplyr::mutate(
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)) # Número de orden en el hogar

woman_data_3_2020 <- woman_data_3_2020 |> # Esta une niños
  dplyr::mutate(
    HIDX = MIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_4_2020 <- woman_data_4_2020 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )

woman_data_5_2020 <- woman_data_5_2020 |>
  dplyr::mutate(
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO)  # Número de orden en el hogar
  )

# Children data_2020
children_data_1_2020 <- children_data_1_2020 |> #
  dplyr::mutate(
    HW1 = HC1,
    HW2 = HC2,
    HW3 = HC3,
    HW53 = HC53,
    QSNUMERO = HC0 # Número de orden en el hogar
  )
 # dplyr::filter(HC13 == 0) # Filtramos a los niños medidos

children_data_2_2020 <- children_data_2_2020 |>
  dplyr::mutate(
    HIDX = HWIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
  #  dplyr::filter(HW13 == 0) # Filtramos a los niños medidos

children_data_3_2020 <- children_data_3_2020 |>
  dplyr::mutate(
    HIDX = HIDX, # Orden de historia de nacimiento
    HHID = str_sub(CASEID, 1, str_length(CASEID) - 3), # Código del hogar
    QSNUMERO = str_sub(CASEID, -2, -1),
    QSNUMERO = as.numeric(QSNUMERO) # Número de orden en el hogar
  )
```

## Join dataframes 2024

```{r}
# Join mother data_2024
woman_data_2024 <- woman_data_1_2024 |>
  dplyr::left_join(woman_data_2_2024, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_4_2024, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_5_2024, by = c("HHID", "QSNUMERO"))

# Join children data_2024
children_data_2024 <- children_data_1_2024 |>
  dplyr::full_join(children_data_2_2024, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(children_data_3_2024, by = c("HHID", "QSNUMERO", "HIDX"))

# Join children data with mother data_2024
children_mother_data_2024 <- children_data_2024 |>
  dplyr::left_join(woman_data_3_2024, by = c("HHID", "QSNUMERO", "HIDX"))

# Join home data with dwelling data_2024
home_dwelling_data_2024 <- home_data_2024 |>
  dplyr::left_join(dwelling_data_2024, by = "HHID")

# Join children/mother data with individual data_2024
children_mother_individual_data_2024 <- children_mother_data_2024 |>
  dplyr::left_join(individual_data_2024, by = c("HHID","QSNUMERO"))

# Join home/dwelling/individual data with mother data_2024
pre_data_2024 <- children_mother_individual_data_2024 |> 
  dplyr::left_join(woman_data_2024, by = c("HHID", "QSNUMERO"))

# Join home/dwelling/individual/mother data with health data_2024
pre_data_1_2024 <- pre_data_2024 |> 
  dplyr::left_join(health_data_2024, by = c("HHID", "QSNUMERO"))

# Join all_2024
endesdbm_2024 <- pre_data_1_2024 |>
  dplyr::left_join(home_dwelling_data_2024, by = 'HHID')

# Clean names
# endestc <- janitor::clean_names(endestc)

# haven::write_dta(endesdbm_2024_join, here::here("data", "endesdbm_2024.dta"))
```

## Join dataframes 2023

```{r}
# Join mother data_2023
woman_data_2023 <- woman_data_1_2023 |>
  dplyr::left_join(woman_data_2_2023, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_4_2023, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_5_2023, by = c("HHID", "QSNUMERO"))

# Join children data_2023
children_data_2023 <- children_data_1_2023 |>
  dplyr::full_join(children_data_2_2023, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(children_data_3_2023, by = c("HHID", "QSNUMERO", "HIDX"))

# Join children data with mother data_2023
children_mother_data_2023 <- children_data_2023 |>
  dplyr::left_join(woman_data_3_2023, by = c("HHID", "QSNUMERO", "HIDX"))

# Join home data with dwelling data_2023
home_dwelling_data_2023 <- home_data_2023 |>
  dplyr::left_join(dwelling_data_2023, by = "HHID")

# Join children/mother data with individual data_2023
children_mother_individual_data_2023 <- children_mother_data_2023 |>
  dplyr::left_join(individual_data_2023, by = c("HHID","QSNUMERO"))

# Join home/dwelling/individual data with mother data_2023
pre_data_2023 <- children_mother_individual_data_2023 |> 
  dplyr::left_join(woman_data_2023, by = c("HHID", "QSNUMERO"))

# Join home/dwelling/individual/mother data with health data_2023
pre_data_1_2023 <- pre_data_2023 |> 
  dplyr::left_join(health_data_2023, by = c("HHID", "QSNUMERO"))

# Join all_2023
endesdbm_2023 <- pre_data_1_2023 |>
  dplyr::left_join(home_dwelling_data_2023, by = 'HHID')
```

## Join dataframes 2022

```{r}
# Join mother data_2022
woman_data_2022 <- woman_data_1_2022 |>
  dplyr::left_join(woman_data_2_2022, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_4_2022, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_5_2022, by = c("HHID", "QSNUMERO"))

# Join children data_2022
children_data_2022 <- children_data_1_2022 |>
  dplyr::full_join(children_data_2_2022, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(children_data_3_2022, by = c("HHID", "QSNUMERO", "HIDX"))

# Join children data with mother data_2022
children_mother_data_2022 <- children_data_2022 |>
  dplyr::left_join(woman_data_3_2022, by = c("HHID", "QSNUMERO", "HIDX"))

# Join home data with dwelling data_2022
home_dwelling_data_2022 <- home_data_2022 |>
  dplyr::left_join(dwelling_data_2022, by = "HHID")

# Join children/mother data with individual data_2022
children_mother_individual_data_2022 <- children_mother_data_2022 |>
  dplyr::left_join(individual_data_2022, by = c("HHID","QSNUMERO"))

# Join home/dwelling/individual data with mother data_2022
pre_data_2022 <- children_mother_individual_data_2022 |> 
  dplyr::left_join(woman_data_2022, by = c("HHID", "QSNUMERO"))

# Join home/dwelling/individual/mother data with health data_2022
pre_data_1_2022 <- pre_data_2022 |> 
  dplyr::left_join(health_data_2022, by = c("HHID", "QSNUMERO"))

# Join all_2022
endesdbm_2022 <- pre_data_1_2022 |>
  dplyr::left_join(home_dwelling_data_2022, by = 'HHID')
```

## Join dataframes 2021

```{r}
# Join mother data_2021
woman_data_2021 <- woman_data_1_2021 |>
  dplyr::left_join(woman_data_2_2021, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_4_2021, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_5_2021, by = c("HHID", "QSNUMERO"))

# Join children data_2021
children_data_2021 <- children_data_1_2021 |>
  dplyr::full_join(children_data_2_2021, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(children_data_3_2021, by = c("HHID", "QSNUMERO", "HIDX"))

# Join children data with mother data_2021
children_mother_data_2021 <- children_data_2021 |>
  dplyr::left_join(woman_data_3_2021, by = c("HHID", "QSNUMERO", "HIDX"))

# Join home data with dwelling data_2021
home_dwelling_data_2021 <- home_data_2021 |>
  dplyr::left_join(dwelling_data_2021, by = "HHID")

# Join children/mother data with individual data_2021
children_mother_individual_data_2021 <- children_mother_data_2021 |>
  dplyr::left_join(individual_data_2021, by = c("HHID","QSNUMERO"))

# Join home/dwelling/individual data with mother data_2021
pre_data_2021 <- children_mother_individual_data_2021 |> 
  dplyr::left_join(woman_data_2021, by = c("HHID", "QSNUMERO"))

# Join home/dwelling/individual/mother data with health data_2021
pre_data_1_2021 <- pre_data_2021 |> 
  dplyr::left_join(health_data_2021, by = c("HHID", "QSNUMERO"))

# Join all_2021
endesdbm_2021 <- pre_data_1_2021 |>
  dplyr::left_join(home_dwelling_data_2021, by = 'HHID')
```

## Join dataframes 2020

```{r}
# Join mother data_2020
woman_data_2020 <- woman_data_1_2020 |>
  dplyr::left_join(woman_data_2_2020, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_4_2020, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(woman_data_5_2020, by = c("HHID", "QSNUMERO"))

# Join children data_2020
children_data_2020 <- children_data_1_2020 |>
  dplyr::full_join(children_data_2_2020, by = c("HHID", "QSNUMERO")) |>
  dplyr::left_join(children_data_3_2020, by = c("HHID", "QSNUMERO", "HIDX"))

# Join children data with mother data_2020
children_mother_data_2020 <- children_data_2020 |>
  dplyr::left_join(woman_data_3_2020, by = c("HHID", "QSNUMERO", "HIDX"))

# Join home data with dwelling data_2020
home_dwelling_data_2020 <- home_data_2020 |>
  dplyr::left_join(dwelling_data_2020, by = "HHID")

# Join children/mother data with individual data_2020
children_mother_individual_data_2020 <- children_mother_data_2020 |>
  dplyr::left_join(individual_data_2020, by = c("HHID","QSNUMERO"))

# Join home/dwelling/individual data with mother data_2020
pre_data_2020 <- children_mother_individual_data_2020 |> 
  dplyr::left_join(woman_data_2020, by = c("HHID", "QSNUMERO"))

# Join home/dwelling/individual/mother data with health data_2020
pre_data_1_2020 <- pre_data_2020 |> 
  dplyr::left_join(health_data_2020, by = c("HHID", "QSNUMERO"))

# Join all_2020
endesdbm_2020 <- pre_data_1_2020 |>
  dplyr::left_join(home_dwelling_data_2020, by = 'HHID')
```

## year codification

```{r}
endesdbm_2024_join <- endesdbm_2024 |>
  dplyr::mutate(year = 2024) |>
  dplyr::rename(NCONGLOME=NCONGLOME1) |>
  dplyr::select(-c(HW56A, HW57A, V456A, V457A)) |>
  dplyr::select(-c(
  "QS413A", "QS413B", "QS413B_A", "QS413C", "QS413D",
  "QS413E", "QS413E_A", "QS413F", "QS506B", "QS708_A", "QS708_AA", "QS708_AB",
  "QS708_B", "QS708_C", "QS708_D", "QS708_E", "QS708_EA", "QS708_F", "QS708_G",
  "QS708_H", "QS708_I", "QS708_J", "QS708_X", "QS708_Y", "QS731_A", "QS731_AA",
  "QS731_AB", "QS731_B", "QS731_C", "QS731_D", "QS731_E", "QS731_EA", "QS731_F",
  "QS731_G", "QS731_H", "QS731_I", "QS731_J", "QS731_X", "QS731_Y"
))

endesdbm_2023_join <- endesdbm_2023 |>
  dplyr::mutate(year=2023) |>
  dplyr::select(-ends_with(".x"), -ends_with(".y")) |>
  dplyr::rename(PESO15_AMAS=Peso15_amas) |>
  dplyr::select(-c(
  "QS413A", "QS413B", "QS413B_A", "QS413C", "QS413D", "QS413E", "QS413E_A",
  "QS413F", "QS506B", "QS708_A", "QS708_AA", "QS708_AB", "QS708_B", "QS708_C",
  "QS708_D", "QS708_E", "QS708_EA", "QS708_F", "QS708_G", "QS708_H", "QS708_I",
  "QS708_J", "QS708_X", "QS708_Y", "QS731_A", "QS731_AA", "QS731_AB", "QS731_B",
  "QS731_C", "QS731_D", "QS731_E", "QS731_EA", "QS731_F", "QS731_G", "QS731_H",
  "QS731_I", "QS731_J", "QS731_X", "QS731_Y"
))

endesdbm_2022_join <- endesdbm_2022 |>
  dplyr::mutate(year=2022) |>
  dplyr::select(-ends_with(".x"), -ends_with(".y")) |>
  dplyr::select(-c(
  "V323A", "QSRESULTX", "QSORDNIN1", "QSRESNIN1", "QSORDNIN2", "QSRESNIN2",
  "QSORDNIN3", "QSRESNIN3", "QSORDNIN4", "QSRESNIN4", "QSORDNIN5", "QSRESNIN5",
  "QSORDNIN6", "QSRESNIN6", "QSORDNIN7", "QSRESNIN7", "QSORDNIN8", "QSRESNIN8",
  "QSORDNIN9", "QSRESNIN9", "QSORDNIND", "QSRESNIND", "CONTROL_S", "QS212X",
  "QS704PRV", "QS708", "QS731", "SHEQUIPO"
))

endesdbm_2021_join <- endesdbm_2021 |>
  dplyr::mutate(year = 2021) |>
  dplyr::select(-ends_with(".x"), -ends_with(".y")) |>
  dplyr::select(-c(
  "V323A", "QSRESULTX", "QSORDNIN1", "QSRESNIN1", "QSORDNIN2", "QSRESNIN2", "QSORDNIN3",
  "QSRESNIN3", "QSORDNIN4", "QSRESNIN4", "QSORDNIN5", "QSRESNIN5", "QSORDNIN6", "QSRESNIN6",
  "QSORDNIN7", "QSRESNIN7", "QSORDNIN8", "QSRESNIN8", "QSORDNIN9", "QSRESNIN9", "QSORDNIND",
  "QSRESNIND", "CONTROL_S", "QS212X", "QS704PRV", "QS708", "QS731", "longitudx", "latitudy",
  "SHEQUIPO"
))

endesdbm_2020_join <- endesdbm_2020 |>
  dplyr::mutate(year=2020) |>
  dplyr::select(-ends_with(".x"), -ends_with(".y"))
```

## variable homogenization

```{r}
count_endesdbm_2024 <- colnames(endesdbm_2024_join)

count_endesdbm_2023 <- colnames(endesdbm_2023_join)

count_endesdbm_2022 <- colnames(endesdbm_2022_join)

count_endesdbm_2021 <- colnames(endesdbm_2021_join)

count_endesdbm_2020 <- colnames(endesdbm_2020_join)
```

```{r}
dplyr::setdiff(count_endesdbm_2022, count_endesdbm_2021)

label_backup <- sapply(endesdbm_2024_join, function(x) attr(x, "label"))

test <- bind_rows(endesdbm_2024_join, endesdbm_2023_join, endesdbm_2022_join, endesdbm_2020_join)

for (v in names(label_backup)) {
  attr(test[[v]], "label") <- label_backup[[v]]
}


# Clean names
# endestc <- janitor::clean_names(endestc)

haven::write_dta(test, here::here("data", "clean", "endes_2024-2020.dta"))
```

## full join

## Variable selection

```{r}
endes_dbm_tbm <- variable_selection_endes(endestc) |>
  dplyr::filter(currently_pregnant != 1 | is.na(currently_pregnant))
```

## Non-plausible values

```{r}
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    sd_height_age_child = case_when(
      sd_height_age_child > 500  ~ NA_real_,
      sd_height_age_child < -500 ~ NA_real_,
      sd_height_age_child >= 9996 ~ NA_real_,
      TRUE ~ sd_height_age_child
    ),
    sd_weight_height_child = case_when(
      sd_weight_height_child > 500  ~ NA_real_,
      sd_weight_height_child < -500 ~ NA_real_,
      sd_weight_height_child >= 9996 ~ NA_real_,
      TRUE ~ sd_weight_height_child
    ),
    sd_weight_age_child = case_when(
      sd_weight_age_child > 500  ~ NA_real_,
      sd_weight_age_child < -500 ~ NA_real_,
      sd_weight_age_child >= 9996 ~ NA_real_,
      TRUE ~ sd_weight_age_child
    ),
    bmi_mother_1 = (weight_mother / 10) / ((height_mother / 10)^2) * 10000,
    bmi_mother_1 = case_when(
      bmi_mother_1 > 60  ~ NA_real_,
      bmi_mother_1 < 16 ~ NA_real_,
      TRUE ~ bmi_mother_1
    )
  ) |>
  dplyr::filter(
    !is.na(sd_height_age_child),
    !is.na(sd_weight_height_child),
    !is.na(sd_weight_age_child),
    !is.na(bmi_mother_1),
    !is.na(hb_child)
  )
```

```{r}
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::group_by(id) |>
  dplyr::slice_min(age_child, with_ties = TRUE) |>
  dplyr::ungroup()
```

```{r}
#| eval: false
#| include: false
summary(endes_dbm_tbm$age_mother)
summary(endes_dbm_tbm$bmi_mother)
sum(is.na(endes_dbm_tbm$sd_height_age_child))
sum(is.na(endes_dbm_tbm$sd_weight_age_child))
lapply(endes_dbm_tbm, function(x) sum(is.na(x)))

```

## Remove missing values

```{r}

```

## Recode and relevel (dictionary)

reducir tamaño de población, filtrar lima, region, area o los manejamos como confusores

modelo truncado por 0 (solo positivos) propensity score

```{r}
#RETRAZO EN EL CRECIMIENTO
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    stunting =
      case_when(
        sd_height_age_child < -200  ~ 1,
        sd_height_age_child >= -200 ~ 0,
        sd_height_age_child >= 9996 ~ 99
      )
  ) |>
  naniar::replace_with_na(replace = list(stunting = c(99))) |>
  labelled::set_value_labels(stunting = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(stunting = "Stunted child under 5 years")

table(endes_dbm_tbm$stunting)
str(endes_dbm_tbm$stunting)

endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    wasting =
      case_when(
        sd_weight_height_child < -200  ~ 1,
        sd_weight_height_child >= -200 ~ 0,
        sd_weight_height_child >= 9996 ~ 99
      )
  ) |>
  naniar::replace_with_na(replace = list(wasting = c(99))) |>
  labelled::set_value_labels(wasting = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(wasting = "Wasted child under 5 years")

#Bajo peso
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    underweight =
      case_when(
        sd_weight_age_child < -200  ~ 1,
        sd_weight_age_child >= -200 ~ 0,
        sd_weight_age_child >= 9996 ~ 99
      )
  ) |>
  naniar::replace_with_na(replace = list(underweight = c(99))) |>
  labelled::set_value_labels(underweight = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(underweight = "Underweight child under 5 years")

#Sobrepeso y obesidad
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    overweight =
      case_when(
        sd_weight_age_child > 200  ~ 1,
        sd_weight_age_child <= 200 ~ 0,
        sd_weight_age_child >= 9996 ~ 99
      )
  ) |>
  naniar::replace_with_na(replace = list(overweight = c(99))) |>
  labelled::set_value_labels(overweight = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(overweight = "Overweight child under 5 years")

#Anemia corregida OMS
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    anemia_oms =
      case_when(
        hb_altura_child < 110  ~ 1,
        hb_altura_child >= 110 ~ 0 
      )
  ) |>
  labelled::set_value_labels(anemia_oms = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(anemia_oms = "Anemia child under 5 years")

table(endes_dbm_tbm$anemia_oms)

#MADRE CON SOBREPESO U OBESIDAD
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    overweight_mother =
      case_when(
        bmi_mother_1 > 25  ~ 1,
        bmi_mother_1 <= 25 ~ 0,
      )
  ) |>
  labelled::set_value_labels(overweight_mother = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(overweight_mother = "Mother overweight/obese")

# Undernutrition
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    undernutrition = case_when(
      stunting == 1 | wasting == 1 | underweight == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(undernutrition = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(undernutrition = "Undernutrition")

# Overweight/stunting
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    overweight_stunting = case_when(
      overweight_mother == 1 & stunting == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(overweight_stunting = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(overweight_stunting = "Overweight/stunting")

# Overweight/wasting
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    overweight_wasting = case_when(
      overweight_mother == 1 & wasting == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(overweight_wasting = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(overweight_wasting = "Overweight/wasting")

# Overweight/underweight
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    overweight_underweight = case_when(
      overweight_mother == 1 & underweight == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(overweight_underweight = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(overweight_underweight = "Overweight/underweight")

# Double burden
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    double_burden = case_when(
      overweight_mother == 1 & undernutrition == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(double_burden = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(double_burden = "DBM")

# Overweight/anemia
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    overweight_anemia_oms = case_when(
      overweight_mother == 1 & anemia_oms == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(overweight_anemia_oms = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(overweight_anemia_oms = "Overweight/undernutrition")

# Triple burden
endes_dbm_tbm <- endes_dbm_tbm |>
  dplyr::mutate(
    triple_burden = case_when(
      overweight_mother == 1 & undernutrition == 1 & anemia_oms == 1 ~ 1,
      TRUE ~ 0)
  ) |>
  labelled::set_value_labels(triple_burden = c("Yes" = 1, "No" = 0)) |>
  labelled::set_variable_labels(triple_burden = "TBM")

haven::write_dta(endes_dbm_tbm, here::here("data", "clean", "endes_dbm_tbm.dta"))
```

## Exploratory Data Analysis (EDA)

```{r}
# Filtrada
dbm <- ninios |>
  dplyr::select(hc8, hc57, hc71, hc70, id1, hc72, peso, id1) |>
  na.omit() |>
  dplyr::filter(hc71 < 2000, hc70 < 2000, hc72 < 2000) |>
  dplyr::mutate(hc57 = as.factor(hc57), peso_edad = hc71 / 100, talla_edad = hc70 / 100, peso_talla = hc72 /100) |>
  dplyr::mutate(
    anemia = case_when(hc57 == 4 ~ "Sin Anemia", TRUE ~ "Anemia"),
    talla_edad_dico = case_when(talla_edad < -2 ~ "DCI", TRUE ~ "Normal"),
    peso_edad_dico = case_when(peso_edad > 2 ~ "Exceso de peso", TRUE ~ "Normal"),
    peso_talla_dico = case_when(peso_talla < -2 ~ "Emaciacion", TRUE ~ "Sin emaciacion"),
    peso_talla_dico_1 = case_when(peso_talla > 2 ~ "Exceso de peso", TRUE ~ "Normal"),
    
    DBM_1 = case_when(anemia == "Anemia" & talla_edad_dico == "DCI" ~ "DBM", TRUE ~ "No DBM"), # Usaremos esta
    DBM_2 = case_when(anemia == "Anemia" & peso_edad_dico == "Exceso de peso" ~ "DBM", TRUE ~ "No DBM"),
    DBM_3 = case_when(anemia == "Anemia" & peso_talla_dico == "Emaciacion" ~ "DBM", TRUE ~ "No DBM"),
    DBM_4 = case_when(anemia == "Anemia" & peso_talla_dico_1 == "Exceso de peso" ~ "DBM", TRUE ~ "No DBM")
  )

summary(dbm)

prop.table(table(dbm$peso_talla_dico))*100

prop.table(table(dbm$id1, dbm$DBM_4), margin = 1)*100

hist(dbm$talla_edad, breaks = 100, col = "lightblue", main = "Peso para la Edad", xlab = "Peso para la Edad")

ggplot(dbm, aes(x = as.factor(id1), fill = DBM_1)) + 
  geom_bar()

# Sin filtro
sin_pro <- ninios |>
  dplyr::mutate(
    talla_edad = hc70 / 100,
    anemia = case_when(hc57 == 4 ~ "Sin Anemia", TRUE ~ "Anemia"),
    talla_edad_dico = case_when(talla_edad < -2 ~ "DCI", TRUE ~ "Normal"),
    DBM_1 = case_when(anemia == "Anemia" & talla_edad_dico == "DCI" ~ "DBM", TRUE ~ "No DBM"))

test <- sin_pro |>
  dplyr::select(id1, DBM_1) |>
  dplyr::count(id1)

test

test_2 <- dbm |>
  dplyr::select(id1, DBM_1) |>
  dplyr::count(id1, DBM_1)

test_2
```

# Produce tables

## Table 1

```{r}
dbm |>
  dplyr::select(where(is.character), peso, -DBM_2, -DBM_3, -DBM_4) |>
  tidyr::pivot_longer(
    cols = c(anemia:peso_talla_dico_1),
    names_to = "Variable",
    values_to = "Valor"
  ) |>
  dplyr::group_by(Variable, Valor) |>
  dplyr::summarise(n = n(), weighted_prop = sum(peso)) |>
  dplyr::mutate(weighted_prop = round(weighted_prop / sum(weighted_prop) * 100, 2))
```

```{r}
tbl_svysummary <-
  survey::svydesign(
    ids = ~ 1,
    data = dbm,
    weights = ~ peso) |>
  tbl_svysummary(
    percent = "column",
    statistic = list(all_categorical() ~ "{n_unweighted} ({p})"),
    type   = all_categorical() ~ "categorical",
    digits = all_categorical() ~ c(0, 1)
  ) |>
  add_ci(
    method = list(all_categorical() ~ "svyprop.logit"),
    statistic = list(all_categorical() ~ "{conf.low} - {conf.high}"),
    style_fun = list(all_categorical() ~ purrr::partial(style_percent, digits = 1))
  ) |>
  bold_labels()

tbl_svysummary
```

## Table 2 (regression)

```{r}
design <- survey::svydesign(ids = ~ 1, data = dbm, weights = ~ peso)
```

```{r}
univ_tab <-
  tbl_uvregression(
    data = design,
    method = glm,
    method.args = list(quasipoisson(link = "log")),
    include = c(sexo:trabajo),
    y = FIES,
    hide_n = TRUE,
    exponentiate = TRUE,
    conf.int = TRUE,
    ci_method = "wald",
    tidy_fun = broom.helpers::tidy_parameters,
    add_estimate_to_reference_rows = FALSE,
    pvalue_fun = ~style_pvalue(.x, digits = 3),
    estimate_fun = ~style_number(.x, digits = 2)) |>
  bold_labels() |>
  modify_footnote(everything() ~ NA, abbreviation = TRUE)
```

```{r}
table_3.1 <-
  glm(
    dx_nutricional ~ edad_del_nino.c + sexo + frecuencia_visita +
      lactancia_materna + edad_de_alimentacion_complementaria +
      presencia_de_alimentos_nutritivos + edad_materna.c + nivel_educativo +
      estado_civil + estado_civil + numero_de_miembros_en_el_hogar +
      ingreso_familiar + situacion_ocupacional + apoyo_familiar + toma_de_decisiones +
      comidas_al_dia_de_la_madre + mdd_w,
    data = data,
    family = quasipoisson(link = "log")) |>
  tbl_regression(
    exponentiate = TRUE,
    conf.int = TRUE,
    pvalue_fun = ~ style_pvalue(.x, digits = 3),
    estimate_fun = ~ style_number(.x, digits = 2)) |>
  bold_p(t = 0.05) |>
  add_vif() |>
  modify_footnote(update = everything() ~ NA, abbreviation = TRUE)
```

```{r}
data <- endes |>
  dplyr::select(urb_rur, region_natural, idx_riq, desague, agua, electricidad,
                combustible, agem_cat, primer_parto, num_child_cat, est_civ,
                lvl_educativo, sexo_jefe, agec_cat, sex_child, hierro_embarazo,
                weight_born_cat, tamano_percibido, actual_amamantando, 
                triple_burden, sample_weight_house)
colnames(endes)


data1 <- data |>
  dplyr::mutate(lactancia = case_when(actual_amamantando == 0 & agec_cat >= 2 ~ "P_>2years",
                                      actual_amamantando == 0 & agec_cat < 2 ~ "P_<2years",
                                      actual_amamantando == 1 & agec_cat >= 2 ~ "C_>2years",
                                      actual_amamantando == 1 & agec_cat < 2 ~ "C_<2years",
                                      FALSE ~ "Never"))

```
